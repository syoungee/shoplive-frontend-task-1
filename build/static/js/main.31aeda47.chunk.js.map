{"version":3,"sources":["dummies.js","pages/MainPage.jsx","pages/EditPage.jsx","Router.jsx","index.js"],"names":["DUMMY","id","title","createdAt","likeCount","imageUrl","MainPage","navigate","useNavigate","useState","itemList","setItemList","inputData","setInputData","itemCount","setItemCount","useEffect","getItemLength","onChange","e","target","value","myData","localStorage","getItem","dataList","JSON","parse","length","className","placeholder","type","required","onClick","temp_list","push","Date","valueOf","setItem","stringify","list","console","log","saveData","map","item","style","backgroundImage","toLocaleString","state","toEditPage","EditPage","location","useLocation","action","size","defaultValue","index","editData","Router","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.31aeda47.chunk.js","sourcesContent":["export const DUMMY = [\n  {\n    id: 1637316103000,\n    title: '제목1 제목1 ',\n    createdAt: 1637316103000,\n    likeCount: 111,\n    imageUrl: 'https://cdn.pixabay.com/photo/2016/01/20/13/05/cat-1151519_960_720.jpg',\n  },\n  {\n    id: 1637316104001,\n    title: '제목2 제목2 제목2 제목2 제목2 ',\n    createdAt: 1637316103000,\n    likeCount: 222,\n    imageUrl: 'https://cdn.pixabay.com/photo/2016/01/08/11/57/butterflies-1127666_960_720.jpg',\n  },\n  {\n    id: 1637316105002,\n    title: '제목3 제목3 제목3 제목3 제목3 제목3 제목3 제목3 제목3 제목3 제목3 제목3 제목3 제목3 제목3 제목3 제목3 제목3 제목3 제목3 제목3 제목3 제목3',\n    createdAt: 1637316103000,\n    likeCount: 333,\n    imageUrl: 'https://cdn.pixabay.com/photo/2014/04/14/20/11/pink-324175_960_720.jpg',\n  },\n  {\n    id: 1637316106000,\n    title: '제목4',\n    createdAt: 1637316103000,\n    likeCount: 444,\n    imageUrl: 'https://cdn.pixabay.com/photo/2015/06/19/21/24/avenue-815297_960_720.jpg',\n  },\n  {\n    id: 1637316107000,\n    title: '제목5 제목5 제목5제목5 제목5 제목5 제목5 제목5 제목5 제목5',\n    createdAt: 1637316103000,\n    likeCount: 555,\n    imageUrl: 'https://cdn.pixabay.com/photo/2017/04/09/09/56/avenue-2215317_960_720.jpg',\n  },\n];\n","import './MainPage.scss';\nimport { useState, useEffect } from 'react';\nimport { DUMMY } from '../dummies';\nimport { useNavigate } from 'react-router-dom';\n\nconst MainPage = () => {\n  const navigate = useNavigate();\n  const [itemList, setItemList] = useState(null); // localStorage에 저장된 데이터\n  const [inputData, setInputData] = useState({}); // 입력한 데이터\n  const [searchItem, setSearchItem] = useState(null); // 검색할 데이터\n  const [itemCount, setItemCount] = useState(0);\n\n  useEffect(() => {\n    setItemCount(getItemLength());\n  }, []);\n\n  /* TODO 1. input값 가져오기 */\n  const onChange = (e) => {\n    setInputData({ ...inputData, [e.target.id]: e.target.value });\n  };\n\n  /* TODO 2. localStorage에 정보 저장 */\n  const saveData = () => {\n    // Validation check\n    if (!inputData.title || !inputData.likeCount || !inputData.imageUrl) {\n      console.log('모든 값을 입력해야합니다.');\n      return;\n    }\n\n    // localStorage에 새로운 데이터 저장\n    if (!localStorage.getItem('itemList')) {\n      let list = [{ ...inputData, id: new Date().valueOf(), createdAt: new Date().valueOf() }];\n      localStorage.setItem('itemList', JSON.stringify(list));\n    } else {\n      let temp_list = JSON.parse(localStorage.getItem('itemList'));\n      temp_list.push({ ...inputData, id: new Date().valueOf(), createdAt: new Date().valueOf() });\n      localStorage.setItem('itemList', JSON.stringify(temp_list));\n    }\n\n    // 아이템 갯수\n    setItemCount(getItemLength());\n  };\n\n  // data length\n  const getItemLength = () => {\n    const myData = localStorage.getItem('itemList');\n    const dataList = JSON.parse(myData);\n    setItemList(dataList);\n\n    return dataList?.length;\n  };\n\n  const toEditPage = (item) => {\n    navigate(`/edit/${item.id}`, { state: { ...item } });\n  };\n\n  // data 삭제\n\n  return (\n    <div className=\"App\">\n      <header>SHOPLIVE</header>\n      <div className=\"input-rows\">\n        <div>\n          <input placeholder=\"검색\" />\n          <button>검색</button>\n        </div>\n        <div>\n          <input placeholder=\"title\" type=\"text\" onChange={(e) => onChange(e)} id=\"title\" required={true} />\n          <input placeholder=\"likeCount\" type=\"number\" onChange={(e) => onChange(e)} id=\"likeCount\" required={true} />\n          <input placeholder=\"imageUrl\" type=\"imgage\" onChange={(e) => onChange(e)} id=\"imageUrl\" required={true} />\n          <button onClick={(e) => saveData(e)}>추가</button>\n        </div>\n        <br />\n        <div>아이템 - 총 {itemCount} 개</div>\n        <br />\n      </div>\n      <div className=\"wrap-items\">\n        {DUMMY.map((item) => (\n          <div key={item.id} className=\"item-row\">\n            <div style={{ backgroundImage: `url(` + item.imageUrl + `)` }} className=\"image\" />\n            <div className=\"likes\">LIKES♡ {item.likeCount}</div>\n            <div className=\"title\">\n              <b>{item.title}</b>\n              <br />\n              {new Date(item.createdAt).toLocaleString()}\n            </div>\n            <div className=\"button-row\">\n              <button className=\"button-modify\">수정</button>\n              <button className=\"button-remove\">제거</button>\n            </div>\n          </div>\n        ))}\n        {itemList?.map((item) => (\n          <div key={item.id} className=\"item-row\">\n            <div style={{ backgroundImage: `url(` + item.imageUrl + `)` }} className=\"image\" />\n            <div className=\"textfield\">\n              <div className=\"likes\">LIKES♡ {item.likeCount}</div>\n              <div className=\"title\">\n                <b>{item.title}</b>\n                <br />\n                {new Date(item.createdAt).toLocaleString()}\n              </div>\n            </div>\n            <div className=\"button-row\">\n              <button\n                className=\"button-modify\"\n                onClick={() => {\n                  toEditPage(item);\n                }}\n              >\n                수정\n              </button>\n              <button className=\"button-remove\" onClick={() => {}}>\n                제거\n              </button>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default MainPage;\n","import './EditPage.scss';\nimport { useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\n\nconst EditPage = () => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [inputData, setInputData] = useState({ ...location.state });\n\n  const onChange = (e) => {\n    setInputData({ ...inputData, [e.target.id]: e.target.value });\n  };\n\n  const editData = () => {\n    // Validation check\n    if (!inputData.title || !inputData.likeCount || !inputData.imageUrl) {\n      console.log('모든 값을 입력해야합니다.');\n      return;\n    }\n\n    // localStorage에 새로운 데이터 수정해서 저장\n    let temp_list = JSON.parse(localStorage.getItem('itemList'));\n    let target_id = -1;\n    temp_list.map((item, index) => {\n      if (item.id === inputData.id) {\n        temp_list[index] = inputData;\n        target_id = index;\n      }\n    });\n    // 수정 후 메인 페이지로 이동\n    localStorage.setItem('itemList', JSON.stringify(temp_list));\n    navigate(`/`);\n  };\n\n  return (\n    <div className=\"EditPage\">\n      <header>SHOPLIVE</header>\n      {console.log(inputData)}\n      <div key={inputData.id} className=\"item-row\">\n        <div style={{ backgroundImage: `url(` + inputData.imageUrl + `)` }} className=\"image\" />\n        <div className=\"textfield\">\n          <div className=\"likes\">LIKES♡ {inputData.likeCount}</div>\n          <div className=\"title\">\n            <b>{inputData.title}</b>\n            <br />\n            {new Date(inputData.createdAt).toLocaleString()}\n          </div>\n        </div>\n      </div>\n      <div className=\"submit-form\">\n        <form action=\"submit\">\n          title:\n          <input type=\"text\" id=\"title\" size=\"35\" defaultValue={inputData?.title ? inputData.title : ''} onChange={onChange} required={true} />\n          <br />\n          likes:\n          <input type=\"number\" id=\"likeCount\" defaultValue={inputData?.likeCount ? inputData.likeCount : ''} onChange={onChange} required={true} />\n          <br />\n          imageUrl:\n          <input type=\"url\" id=\"imageUrl\" size=\"70\" defaultValue={inputData?.imageUrl ? inputData.imageUrl : ''} onChange={onChange} required={true} />\n          <br />\n          <br />\n          <button\n            className=\"button-modify\"\n            onClick={() => {\n              editData();\n            }}\n          >\n            저장하기\n          </button>\n          <button\n            className=\"button-cancel\"\n            onClick={() => {\n              navigate(`/`);\n            }}\n          >\n            취소하기\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default EditPage;\n","import { HashRouter, Routes, Route } from 'react-router-dom';\nimport MainPage from './pages/MainPage';\nimport EditPage from './pages/EditPage';\n\nconst Router = () => {\n  return (\n    <HashRouter>\n      <Routes>\n        <Route path=\"/\" element={<MainPage />} />\n        <Route path=\"/edit/:id\" element={<EditPage />} />\n      </Routes>\n    </HashRouter>\n  );\n};\n\nexport default Router;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Router from './Router';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}