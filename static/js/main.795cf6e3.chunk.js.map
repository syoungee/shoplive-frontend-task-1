{"version":3,"sources":["dummies.js","pages/MainPage.jsx","pages/EditPage.jsx","components/HighLight.jsx","pages/SearchPage.jsx","Router.jsx","index.js"],"names":["DUMMY","id","title","createdAt","likeCount","imageUrl","MainPage","navigate","useNavigate","useState","itemList","setItemList","inputData","setInputData","searchItem","setSearchItem","itemCount","setItemCount","useEffect","localStorage","getItem","setItem","JSON","stringify","getItemLength","onChange","e","target","value","myData","dataList","parse","length","className","placeholder","type","onClick","result","filter","item","includes","state","itemArray","searchText","searchItems","required","temp_list","push","Date","valueOf","list","alert","saveData","map","style","backgroundImage","split","text","i","toLocaleString","toEditPage","target_item","console","log","removeItem","EditPage","location","useLocation","href","idx","action","rows","cols","defaultValue","size","index","editData","highLightText","query","parts","RegExp","part","toLowerCase","SearchPage","Router","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.795cf6e3.chunk.js","sourcesContent":["export const DUMMY = [\n  {\n    id: 1637316103000,\n    title:\n      'strawberry moon \\n커다란 strawberry moon 한 스쿱 \\n나에게 너를 맡겨볼래 eh-oh \\n바람을 세로질러 날아오르는 기분 so cool \\n삶이 어떻게 더 완벽해 ooh~',\n    createdAt: 1637316103000,\n    likeCount: 111,\n    imageUrl: 'https://velog.velcdn.com/images/syoungee/post/cff22f96-86ea-4376-8a04-2c329f5ba563/image.JPG',\n  },\n  {\n    id: 1637316104001,\n    title: 'Lilac \\n오 라일락 꽃이 지는 날 goodbye \\n이런 결말이 어울려 \\n안녕 꽃잎 같은 안녕 \\n하얀 우리 봄날의 climax \\n아 얼마나 기쁜 일이야',\n    createdAt: 1637316103000,\n    likeCount: 222,\n    imageUrl: 'https://velog.velcdn.com/images/syoungee/post/5667a2a6-e5ed-4ab6-895a-caab5c8744c6/image.PNG',\n  },\n  {\n    id: 1637316105002,\n    title: '9월 17일 예인이와 데이트 \\n아이크v3 너무 예쁘잖아🤍 \\n오늘만을 기다려왔다고',\n    createdAt: 1637316103000,\n    likeCount: 333,\n    imageUrl: 'https://velog.velcdn.com/images/syoungee/post/1f312a69-96a1-4598-b09b-c6c9aeb5f11d/image.JPG',\n  },\n  {\n    id: 1637316106000,\n    title: '하루 끝 \\n너무 좋아서 그래 \\n나 시무룩한 얼굴 하고 있지만 \\n또 기다리다 고민만 하다 \\n흘러가는 하루 끝에서 하는 말 \\n내가 널 사랑해',\n    createdAt: 1637316103000,\n    likeCount: 444,\n    imageUrl: 'https://velog.velcdn.com/images/syoungee/post/0e259525-eccb-4700-bd0a-cf09d7ecb1ed/image.JPG',\n  },\n  {\n    id: 1637316107000,\n    title:\n      'Ah puh \\n어어어 푸푸푸 또 🌊 \\n허허허 우우우적🌊 \\n거거거 리더던 시🌊 \\n저저절 나라면 \\n워어언 이 사람아 \\n언제적 얘길 꺼내나 \\n보란듯이 헤엄치기 처첨버벙',\n    createdAt: 1637316103000,\n    likeCount: 555,\n    imageUrl: 'https://velog.velcdn.com/images/syoungee/post/7f6769d0-d2e8-4ce6-b066-156e4e829e20/image.JPG',\n  },\n];\n","import './MainPage.scss';\nimport { useState, useEffect } from 'react';\nimport { DUMMY } from '../dummies';\nimport { useNavigate } from 'react-router-dom';\n\nconst MainPage = () => {\n  const navigate = useNavigate();\n  const [itemList, setItemList] = useState(null); // localStorage에 저장된 데이터\n  const [inputData, setInputData] = useState({}); // 입력한 데이터\n  const [searchItem, setSearchItem] = useState(null); // 검색할 데이터\n  const [itemCount, setItemCount] = useState(0); // 총 아이템 갯수\n\n  useEffect(() => {\n    // 초기 화면에 dummy data를 localstorage에 넣어 저장\n    if (!localStorage.getItem('itemList')) {\n      localStorage.setItem('itemList', JSON.stringify(DUMMY));\n    }\n    setItemCount(getItemLength());\n  }, []);\n\n  // input값 가져오기\n  const onChange = (e) => {\n    if (e.target.id === 'search') {\n      // 검색 input\n      setSearchItem(e.target.value);\n    } else {\n      // title, likeCount, imageUrl input\n      setInputData({ ...inputData, [e.target.id]: e.target.value });\n    }\n  };\n\n  // localStorage에 입력한 아이템 저장\n  const saveData = () => {\n    // Validation check\n    if (!inputData.title || !inputData.likeCount || !inputData.imageUrl) {\n      alert('모든 값을 입력해야합니다.');\n      return;\n    }\n\n    // localStorage에 새로운 아이템 저장\n    if (!localStorage.getItem('itemList')) {\n      let list = [{ ...inputData, id: new Date().valueOf(), createdAt: new Date().valueOf() }];\n      localStorage.setItem('itemList', JSON.stringify(list));\n    } else {\n      let temp_list = JSON.parse(localStorage.getItem('itemList'));\n      temp_list.push({ ...inputData, id: new Date().valueOf(), createdAt: new Date().valueOf() });\n      localStorage.setItem('itemList', JSON.stringify(temp_list));\n    }\n\n    // 아이템 갯수\n    setItemCount(getItemLength());\n  };\n\n  // 아이템 갯수\n  const getItemLength = () => {\n    const myData = localStorage.getItem('itemList');\n    const dataList = JSON.parse(myData);\n    setItemList(dataList);\n    return dataList?.length;\n  };\n\n  // 해당 아이템 수정 페이지로 이동\n  const toEditPage = (item) => {\n    navigate(`/edit/${item.id}`, { state: { ...item } });\n  };\n\n  // localStorage에서 해당 아이템 삭제\n  const removeItem = (target_item) => {\n    let temp_list = JSON.parse(localStorage.getItem('itemList'));\n    const result = temp_list.filter((item) => item.id !== target_item.id);\n    console.log(result);\n    localStorage.setItem('itemList', JSON.stringify(result));\n\n    // 아이템 갯수 갱신\n    setItemCount(getItemLength());\n  };\n\n  // 아이템 검색 기능\n  const searchItems = () => {\n    const result = itemList.filter((item) => {\n      return item.title.includes(searchItem);\n    });\n\n    navigate(`/search/${searchItem}`, { state: { itemArray: [...result], searchText: searchItem } });\n  };\n\n  return (\n    <div className=\"MainPage\">\n      <header>SHOPLIVE</header>\n      <div className=\"input-rows\">\n        <div>\n          <input placeholder=\"검색\" type=\"text\" onChange={(e) => onChange(e)} id=\"search\" />\n          <button onClick={() => searchItems()}>검색</button>\n        </div>\n        <div>\n          <input placeholder=\"title\" type=\"text\" onChange={(e) => onChange(e)} id=\"title\" required={true} />\n          <input placeholder=\"likeCount\" type=\"number\" onChange={(e) => onChange(e)} id=\"likeCount\" required={true} />\n          <input placeholder=\"imageUrl\" type=\"imgage\" onChange={(e) => onChange(e)} id=\"imageUrl\" required={true} />\n          <button onClick={(e) => saveData(e)}>추가</button>\n        </div>\n        <br />\n        <div>아이템 - 총 {itemCount} 개</div>\n        <br />\n      </div>\n      <div className=\"wrap-items\">\n        {itemList?.map((item) => (\n          <div key={item.id} className=\"item-row\">\n            <div style={{ backgroundImage: `url(` + item.imageUrl + `)` }} className=\"image\" />\n            <div className=\"textfield\">\n              <div className=\"likes\">LIKES♡ {item.likeCount}</div>\n              <div className=\"title\">\n                <b>\n                  {item.title.split('\\n').map((text, i) => {\n                    return (\n                      <span key={i}>\n                        {text}\n                        <br />\n                      </span>\n                    );\n                  })}\n                </b>\n                <br />\n              </div>\n              <p className=\"date\">{new Date(item.createdAt).toLocaleString()}</p>\n            </div>\n            <div className=\"button-row\">\n              <button\n                className=\"button-modify\"\n                onClick={() => {\n                  toEditPage(item);\n                }}\n              >\n                수정\n              </button>\n              <button\n                className=\"button-remove\"\n                onClick={() => {\n                  removeItem(item);\n                }}\n              >\n                제거\n              </button>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default MainPage;\n","import './EditPage.scss';\nimport { useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\n\nconst EditPage = () => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [inputData, setInputData] = useState({ ...location.state });\n\n  const onChange = (e) => {\n    setInputData({ ...inputData, [e.target.id]: e.target.value });\n  };\n\n  const editData = () => {\n    // Validation check\n    if (!inputData.title || !inputData.likeCount || !inputData.imageUrl) {\n      alert('모든 값을 입력해야합니다.');\n    }\n\n    // localStorage에 새로운 데이터 수정해서 저장\n    let temp_list = JSON.parse(localStorage.getItem('itemList'));\n    temp_list.map((item, index) => {\n      if (item.id === inputData.id) {\n        temp_list[index] = inputData;\n      }\n      return temp_list[index];\n    });\n    // 수정 후 메인 페이지로 이동\n    localStorage.setItem('itemList', JSON.stringify(temp_list));\n    navigate(`/`);\n  };\n\n  return (\n    <div className=\"EditPage\">\n      <div className=\"header\">\n        <a href=\"/shoplive-frontend-task-1/\">SHOPLIVE</a>\n      </div>\n      <div className=\"nav-menu\">\n        <a href=\"/shoplive-frontend-task-1/\">HOME</a>\n      </div>\n      <div key={inputData.id} className=\"item-row\">\n        <div style={{ backgroundImage: `url(` + inputData.imageUrl + `)` }} className=\"image\" />\n        <div className=\"textfield\">\n          <div className=\"likes\">LIKES♡ {inputData.likeCount}</div>\n          <div className=\"title\">\n            <b>\n              {inputData.title.split('\\n').map((text, idx) => {\n                return (\n                  <span key={idx}>\n                    {text}\n                    <br />\n                  </span>\n                );\n              })}\n            </b>\n            <br />\n            {new Date(inputData.createdAt).toLocaleString()}\n          </div>\n        </div>\n      </div>\n      <div className=\"submit-form\">\n        <form action=\"submit\">\n          title:\n          <br />\n          <textarea type=\"text\" id=\"title\" rows=\"5\" cols=\"30\" defaultValue={inputData?.title ? inputData.title : ''} onChange={onChange} required={true} />\n          <br />\n          likes:\n          <input type=\"number\" id=\"likeCount\" defaultValue={inputData?.likeCount ? inputData.likeCount : ''} onChange={onChange} required={true} />\n          <br />\n          imageUrl:\n          <input type=\"url\" id=\"imageUrl\" size=\"70\" defaultValue={inputData?.imageUrl ? inputData.imageUrl : ''} onChange={onChange} required={true} />\n          <br />\n          <br />\n          <button\n            className=\"button-modify\"\n            onClick={() => {\n              editData();\n            }}\n          >\n            저장하기\n          </button>\n          <button\n            className=\"button-cancel\"\n            onClick={() => {\n              navigate(`/`);\n            }}\n          >\n            취소하기\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default EditPage;\n","/*\n  text highlight\n\n  regex expression\n  g = global, match all instances of the pattern in a string, not just one.\n  i = case-insensitive (so, for example, /a/i will match the string \"a\" or \"A\".\n*/\nconst highLightText = (text, query) => {\n  if (query !== '' && text.includes(query)) {\n    const parts = text.split(new RegExp(`(${query})`, 'gi'));\n\n    return <>{parts.map((part, index) => (part.toLowerCase() === query.toLowerCase() ? <mark key={index}>{part}</mark> : part))}</>;\n  }\n\n  return text;\n};\n\nexport default highLightText;\n","import './SearchPage.scss';\nimport { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport highLightText from '../components/HighLight';\n\nconst SearchPage = () => {\n  const location = useLocation();\n  const [itemList] = useState([...location.state.itemArray]);\n  const [itemCount, setItemCount] = useState(0);\n  const [searchText] = useState(location.state.searchText);\n\n  useEffect(() => {\n    const getItemLength = () => {\n      return itemList.length;\n    };\n    setItemCount(getItemLength());\n  }, [itemList]);\n\n  return (\n    <div className=\"SearchPage\">\n      <div className=\"header\">\n        <a href=\"/shoplive-frontend-task-1/\">SHOPLIVE</a>\n      </div>\n      <div className=\"nav-menu\">\n        <a href=\"/shoplive-frontend-task-1/\">HOME</a>\n      </div>\n      <div className=\"input-rows\">아이템 - 총 {itemCount} 개</div>\n      <div className=\"wrap-items\">\n        {itemList?.map((item) => (\n          <div key={item.id} className=\"item-row\">\n            <div style={{ backgroundImage: `url(` + item.imageUrl + `)` }} className=\"image\" />\n            <div className=\"textfield\">\n              <div className=\"likes\">LIKES♡ {item.likeCount}</div>\n              <div className=\"title\">\n                <b>\n                  {item.title.split('\\n').map((text, idx) => {\n                    return (\n                      <span key={idx}>\n                        {highLightText(text, searchText)}\n                        <br />\n                      </span>\n                    );\n                  })}\n                </b>\n                <br />\n                {new Date(item.createdAt).toLocaleString()}\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default SearchPage;\n","import { HashRouter, Routes, Route } from 'react-router-dom';\nimport MainPage from './pages/MainPage';\nimport EditPage from './pages/EditPage';\nimport SearchPage from './pages/SearchPage';\n\nconst Router = () => {\n  return (\n    <HashRouter>\n      <Routes>\n        <Route path=\"/\" element={<MainPage />} />\n        <Route path=\"/edit/:id\" element={<EditPage />} />\n        <Route path=\"/search/:text\" element={<SearchPage />} />\n      </Routes>\n    </HashRouter>\n  );\n};\n\nexport default Router;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Router from './Router';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}