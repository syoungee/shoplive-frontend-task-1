{"version":3,"sources":["dummies.js","pages/MainPage.jsx","pages/EditPage.jsx","components/HighLight.jsx","pages/SearchPage.jsx","Router.jsx","index.js"],"names":["DUMMY","id","title","createdAt","likeCount","imageUrl","MainPage","navigate","useNavigate","useState","itemList","setItemList","inputData","setInputData","searchItem","setSearchItem","itemCount","setItemCount","useEffect","localStorage","getItem","setItem","JSON","stringify","getItemLength","onChange","e","target","value","myData","dataList","parse","length","className","placeholder","type","onClick","result","filter","item","includes","console","log","state","itemArray","searchText","searchItems","required","temp_list","push","Date","valueOf","list","alert","saveData","map","style","backgroundImage","split","text","toLocaleString","toEditPage","target_item","removeItem","EditPage","location","useLocation","href","idx","action","size","defaultValue","index","editData","highLightText","query","parts","RegExp","part","toLowerCase","SearchPage","Router","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a095a108.chunk.js","sourcesContent":["export const DUMMY = [\n  {\n    id: 1637316103000,\n    title: 'strawberry moon\\n커다란 strawberry moon 한 스쿱\\n나에게 너를 맡겨볼래 eh-oh\\n바람을 세로질러 날아오르는 기분 so cool\\n삶이 어떻게 더 완벽해 ooh~',\n    createdAt: 1637316103000,\n    likeCount: 111,\n    imageUrl: 'https://velog.velcdn.com/images/syoungee/post/cff22f96-86ea-4376-8a04-2c329f5ba563/image.JPG',\n  },\n  {\n    id: 1637316104001,\n    title: 'Lilac\\n오 라일락 꽃이 지는 날 goodbye\\n이런 결말이 어울려\\n안녕 꽃잎 같은 안녕\\n하얀 우리 봄날의 climax\\n아 얼마나 기쁜 일이야',\n    createdAt: 1637316103000,\n    likeCount: 222,\n    imageUrl: 'https://velog.velcdn.com/images/syoungee/post/5667a2a6-e5ed-4ab6-895a-caab5c8744c6/image.PNG',\n  },\n  {\n    id: 1637316105002,\n    title: '9월 17일 예인이와 데이트\\n 아이크v3 너무 예쁘잖아🤍\\n 오늘만을 기다려왔다고',\n    createdAt: 1637316103000,\n    likeCount: 333,\n    imageUrl: 'https://velog.velcdn.com/images/syoungee/post/1f312a69-96a1-4598-b09b-c6c9aeb5f11d/image.JPG',\n  },\n  {\n    id: 1637316106000,\n    title: '하루 끝\\n너무 좋아서 그래\\n나 시무룩한 얼굴 하고 있지만\\n또 기다리다 고민만 하다\\n흘러가는 하루 끝에서 하는 말\\n내가 널 사랑해',\n    createdAt: 1637316103000,\n    likeCount: 444,\n    imageUrl: 'https://velog.velcdn.com/images/syoungee/post/0e259525-eccb-4700-bd0a-cf09d7ecb1ed/image.JPG',\n  },\n  {\n    id: 1637316107000,\n    title:\n      'Ah puh\\n어어어 푸푸푸 또 🌊\\n 허허허 우우우적🌊\\n거거거 리더던 시🌊\\n저저절 나라면 \\n워어언 이 사람아\\n언제적 얘길 꺼내나\\n보란듯이 헤엄치기 처첨버벙',\n    createdAt: 1637316103000,\n    likeCount: 555,\n    imageUrl: 'https://velog.velcdn.com/images/syoungee/post/7f6769d0-d2e8-4ce6-b066-156e4e829e20/image.JPG',\n  },\n];\n","import './MainPage.scss';\nimport { useState, useEffect } from 'react';\nimport { DUMMY } from '../dummies';\nimport { useNavigate } from 'react-router-dom';\n\nconst MainPage = () => {\n  const navigate = useNavigate();\n  const [itemList, setItemList] = useState(null); // localStorage에 저장된 데이터\n  const [inputData, setInputData] = useState({}); // 입력한 데이터\n  const [searchItem, setSearchItem] = useState(null); // 검색할 데이터\n  const [itemCount, setItemCount] = useState(0); // 총 아이템 갯수\n\n  useEffect(() => {\n    // 초기 화면에 dummy data를 localstorage에 넣어 저장\n    if (!localStorage.getItem('itemList')) {\n      localStorage.setItem('itemList', JSON.stringify(DUMMY));\n    }\n    setItemCount(getItemLength());\n  }, []);\n\n  // input값 가져오기\n  const onChange = (e) => {\n    if (e.target.id === 'search') {\n      // 검색 input\n      setSearchItem(e.target.value);\n    } else {\n      // title, likeCount, imageUrl input\n      setInputData({ ...inputData, [e.target.id]: e.target.value });\n    }\n  };\n\n  // localStorage에 입력한 아이템 저장\n  const saveData = () => {\n    // Validation check\n    if (!inputData.title || !inputData.likeCount || !inputData.imageUrl) {\n      alert('모든 값을 입력해야합니다.');\n      return;\n    }\n\n    // localStorage에 새로운 아이템 저장\n    if (!localStorage.getItem('itemList')) {\n      let list = [{ ...inputData, id: new Date().valueOf(), createdAt: new Date().valueOf() }];\n      localStorage.setItem('itemList', JSON.stringify(list));\n    } else {\n      let temp_list = JSON.parse(localStorage.getItem('itemList'));\n      temp_list.push({ ...inputData, id: new Date().valueOf(), createdAt: new Date().valueOf() });\n      localStorage.setItem('itemList', JSON.stringify(temp_list));\n    }\n\n    // 아이템 갯수\n    setItemCount(getItemLength());\n  };\n\n  // 아이템 갯수\n  const getItemLength = () => {\n    const myData = localStorage.getItem('itemList');\n    const dataList = JSON.parse(myData);\n    setItemList(dataList);\n    return dataList?.length;\n  };\n\n  // 해당 아이템 수정 페이지로 이동\n  const toEditPage = (item) => {\n    navigate(`/edit/${item.id}`, { state: { ...item } });\n  };\n\n  // localStorage에서 해당 아이템 삭제\n  const removeItem = (target_item) => {\n    let temp_list = JSON.parse(localStorage.getItem('itemList'));\n    const result = temp_list.filter((item) => item.id !== target_item.id);\n    console.log(result);\n    localStorage.setItem('itemList', JSON.stringify(result));\n\n    // 아이템 갯수 갱신\n    setItemCount(getItemLength());\n  };\n\n  // 아이템 검색 기능\n  const searchItems = () => {\n    const result = itemList.filter((item) => {\n      return item.title.includes(searchItem);\n    });\n    console.log(result);\n    console.log(searchItem);\n\n    navigate(`/search/${searchItem}`, { state: { itemArray: [...result], searchText: searchItem } });\n  };\n\n  return (\n    <div className=\"MainPage\">\n      <header>SHOPLIVE</header>\n      <div className=\"input-rows\">\n        <div>\n          <input placeholder=\"검색\" type=\"text\" onChange={(e) => onChange(e)} id=\"search\" />\n          <button onClick={() => searchItems()}>검색</button>\n        </div>\n        <div>\n          <input placeholder=\"title\" type=\"text\" onChange={(e) => onChange(e)} id=\"title\" required={true} />\n          <input placeholder=\"likeCount\" type=\"number\" onChange={(e) => onChange(e)} id=\"likeCount\" required={true} />\n          <input placeholder=\"imageUrl\" type=\"imgage\" onChange={(e) => onChange(e)} id=\"imageUrl\" required={true} />\n          <button onClick={(e) => saveData(e)}>추가</button>\n        </div>\n        <br />\n        <div>아이템 - 총 {itemCount} 개</div>\n        <br />\n      </div>\n      <div className=\"wrap-items\">\n        {itemList?.map((item) => (\n          <div key={item.id} className=\"item-row\">\n            <div style={{ backgroundImage: `url(` + item.imageUrl + `)` }} className=\"image\" />\n            <div className=\"textfield\">\n              <div className=\"likes\">LIKES♡ {item.likeCount}</div>\n              <div className=\"title\">\n                <b>\n                  {item.title.split('\\n').map((text) => {\n                    return (\n                      <span>\n                        {text}\n                        <br />\n                      </span>\n                    );\n                  })}\n                </b>\n                <br />\n              </div>\n              <p className=\"date\">{new Date(item.createdAt).toLocaleString()}</p>\n            </div>\n            <div className=\"button-row\">\n              <button\n                className=\"button-modify\"\n                onClick={() => {\n                  toEditPage(item);\n                }}\n              >\n                수정\n              </button>\n              <button\n                className=\"button-remove\"\n                onClick={() => {\n                  removeItem(item);\n                }}\n              >\n                제거\n              </button>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default MainPage;\n","import './EditPage.scss';\nimport { useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\n\nconst EditPage = () => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [inputData, setInputData] = useState({ ...location.state });\n\n  const onChange = (e) => {\n    setInputData({ ...inputData, [e.target.id]: e.target.value });\n  };\n\n  const editData = () => {\n    // Validation check\n    if (!inputData.title || !inputData.likeCount || !inputData.imageUrl) {\n      alert('모든 값을 입력해야합니다.');\n      return;\n    }\n\n    // localStorage에 새로운 데이터 수정해서 저장\n    let temp_list = JSON.parse(localStorage.getItem('itemList'));\n    let target_id = -1;\n    temp_list.map((item, index) => {\n      if (item.id === inputData.id) {\n        temp_list[index] = inputData;\n        target_id = index;\n      }\n    });\n    // 수정 후 메인 페이지로 이동\n    localStorage.setItem('itemList', JSON.stringify(temp_list));\n    navigate(`/`);\n  };\n\n  return (\n    <div className=\"EditPage\">\n      <div className=\"header\">\n        <a href=\"/shoplive-frontend-task-1/\">SHOPLIVE</a>\n      </div>\n      <div className=\"nav-menu\">\n        <a href=\"/shoplive-frontend-task-1/\">HOME</a>\n      </div>\n      <div key={inputData.id} className=\"item-row\">\n        <div style={{ backgroundImage: `url(` + inputData.imageUrl + `)` }} className=\"image\" />\n        <div className=\"textfield\">\n          <div className=\"likes\">LIKES♡ {inputData.likeCount}</div>\n          <div className=\"title\">\n            <b>\n              {inputData.title.split('\\n').map((text, idx) => {\n                return (\n                  <span key={idx}>\n                    {text}\n                    <br />\n                  </span>\n                );\n              })}\n            </b>\n            <br />\n            {new Date(inputData.createdAt).toLocaleString()}\n          </div>\n        </div>\n      </div>\n      <div className=\"submit-form\">\n        <form action=\"submit\">\n          title:\n          <input type=\"text\" id=\"title\" size=\"35\" defaultValue={inputData?.title ? inputData.title : ''} onChange={onChange} required={true} />\n          <br />\n          likes:\n          <input type=\"number\" id=\"likeCount\" defaultValue={inputData?.likeCount ? inputData.likeCount : ''} onChange={onChange} required={true} />\n          <br />\n          imageUrl:\n          <input type=\"url\" id=\"imageUrl\" size=\"70\" defaultValue={inputData?.imageUrl ? inputData.imageUrl : ''} onChange={onChange} required={true} />\n          <br />\n          <br />\n          <button\n            className=\"button-modify\"\n            onClick={() => {\n              editData();\n            }}\n          >\n            저장하기\n          </button>\n          <button\n            className=\"button-cancel\"\n            onClick={() => {\n              navigate(`/`);\n            }}\n          >\n            취소하기\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default EditPage;\n","/*\n  text highlight\n\n  regex expression\n  g = global, match all instances of the pattern in a string, not just one.\n  i = case-insensitive (so, for example, /a/i will match the string \"a\" or \"A\".\n*/\nconst highLightText = (text, query) => {\n  if (query !== '' && text.includes(query)) {\n    const parts = text.split(new RegExp(`(${query})`, 'gi'));\n\n    return <>{parts.map((part, index) => (part.toLowerCase() === query.toLowerCase() ? <mark key={index}>{part}</mark> : part))}</>;\n  }\n\n  return text;\n};\n\nexport default highLightText;\n","import './SearchPage.scss';\nimport { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport highLightText from '../components/HighLight';\n\nconst SearchPage = () => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [itemList, setItemList] = useState([...location.state.itemArray]);\n  const [itemCount, setItemCount] = useState(0);\n  const [searchText, setSearchText] = useState(location.state.searchText);\n\n  useEffect(() => {\n    console.log(itemList);\n    setItemCount(getItemLength());\n  }, []);\n\n  // 아이템 갯수\n  const getItemLength = () => {\n    return itemList.length;\n  };\n\n  return (\n    <div className=\"SearchPage\">\n      <div className=\"header\">\n        <a href=\"/shoplive-frontend-task-1/\">SHOPLIVE</a>\n      </div>\n      <div className=\"nav-menu\">\n        <a href=\"/shoplive-frontend-task-1/\">HOME</a>\n      </div>\n      <div className=\"input-rows\">아이템 - 총 {itemCount} 개</div>\n      <div className=\"wrap-items\">\n        {itemList?.map((item) => (\n          <div key={item.id} className=\"item-row\">\n            <div style={{ backgroundImage: `url(` + item.imageUrl + `)` }} className=\"image\" />\n            <div className=\"textfield\">\n              <div className=\"likes\">LIKES♡ {item.likeCount}</div>\n              <div className=\"title\">\n                <b>\n                  {item.title.split('\\n').map((text, idx) => {\n                    return (\n                      <span key={idx}>\n                        {highLightText(text, searchText)}\n                        <br />\n                      </span>\n                    );\n                  })}\n                </b>\n                <br />\n                {new Date(item.createdAt).toLocaleString()}\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default SearchPage;\n","import { HashRouter, Routes, Route } from 'react-router-dom';\nimport MainPage from './pages/MainPage';\nimport EditPage from './pages/EditPage';\nimport SearchPage from './pages/SearchPage';\n\nconst Router = () => {\n  return (\n    <HashRouter>\n      <Routes>\n        <Route path=\"/\" element={<MainPage />} />\n        <Route path=\"/edit/:id\" element={<EditPage />} />\n        <Route path=\"/search/:text\" element={<SearchPage />} />\n      </Routes>\n    </HashRouter>\n  );\n};\n\nexport default Router;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Router from './Router';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}